import{_ as e,c as a,o as i,ag as s}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Movement","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/movement.md","filePath":"wiki/movement.md"}'),n={name:"wiki/movement.md"};function o(r,t,d,l,h,p){return i(),a("div",null,t[0]||(t[0]=[s(`<h1 id="movement" tabindex="-1">Movement <a class="header-anchor" href="#movement" aria-label="Permalink to &quot;Movement&quot;">​</a></h1><p>Movement control or in the case of the SDK manual movement control, is essentially a set of methods used in temi&#39;s telepresence that allow the user to manually control temi&#39;s movement. These movements are explained in further details below.</p><h2 id="api-overview" tabindex="-1">API Overview <a class="header-anchor" href="#api-overview" aria-label="Permalink to &quot;API Overview&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Return</th><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>void</td><td><a href="#skidJoy">skidJoy(float x, float y, boolean smart)</a></td><td>Manually move temi</td></tr><tr><td>void</td><td><a href="#turnBy">turnBy(int degrees, float speed)</a></td><td>Turn by by a specific degree</td></tr><tr><td>void</td><td><a href="#tiltAngle">tiltAngle(int degrees, float speed)</a></td><td>Tilt temi&#39;s head to a specific angle</td></tr><tr><td>void</td><td><a href="#tiltBy">tiltBy(int degrees, float speed)</a></td><td>Tilt temi&#39;s head to by a specific degree</td></tr><tr><td>void</td><td><a href="#stopMovement">stopMovement()</a></td><td>Stop all movement</td></tr><tr><td>boolean</td><td><a href="#patrol">patrol(List&lt;String&gt; locations, boolean nonsotp, int times, int waiting)</a></td><td>Patrol</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="#onRobotLiftedListener">OnRobotLiftedListener</a></td><td>Robot lifted listener</td></tr><tr><td><a href="#onMovementVelocityChangedListener">OnMovementVelocityChangedListener</a></td><td>Velocity changed of movement listener</td></tr><tr><td><a href="#onMovementStatusChangedListener">OnMovementStatusChangedListener</a></td><td>Status changed listener of movement(skidJoy, turnBy) listener</td></tr></tbody></table><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="skidjoy" tabindex="-1">skidJoy() <a class="header-anchor" href="#skidjoy" aria-label="Permalink to &quot;skidJoy()&quot;">​</a></h3><p>Use this method to manually navigate temi on its&#39; axis in a similat fashion to the way it&#39;s done in the video call.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>x</td><td>float</td><td>float value of distance to cover on temi&#39;s x axis. The range of values is from 1-(-)1, where 1 is a complete step forward and -1 is complete step backwards on the axis.</td></tr><tr><td>y</td><td>float</td><td>float value of distance to cover on temi&#39;s y axis. The range of values is from 1-(-)1, where 1 is a complete step forward and -1 is complete step backwards on the axis.</td></tr><tr><td>smart</td><td>boolean</td><td>Bypass obstacles while moving, supported from version <strong>0.10.79</strong></td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> skidJoy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li><li><p><strong>Recommendation</strong></p><ul><li>Use the graph below to better understand temi&#39;s axis.</li><li>It&#39;s best to use the values 1 and -1 as since values in between will not be noticeable to the untrained eye.</li><li>It&#39;s recommended to give a buffer of at least 500 milliseconds between each command for the best outcome.</li><li>Backwards speed is lower than forward&#39;s since there are less sensors and we want to reduce the risk of damage.</li></ul><p><img src="https://github.com/robotemi/sdk/blob/master/images/Unknown.png" alt=""></p></li><li><p><strong>Examples</strong></p><ul><li>Forward - robot.skidJoy(1,0) for how long as you want it to move forward.</li><li>Left - robot.skidJoy(0,1) until the robot is facing the direction you want it to move to</li></ul></li></ul><hr><h3 id="turnby" tabindex="-1">turnBy() <a class="header-anchor" href="#turnby" aria-label="Permalink to &quot;turnBy()&quot;">​</a></h3><p>Use this method to manually turn temi&#39;s body by a certain degree.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>degrees</td><td>int</td><td>The degrees you want to temi&#39;s body to turn.</td></tr><tr><td>speed</td><td>float</td><td>[Optional parameter] The coefficient of the maximum speed, the value range is 0~1. Support from 0.10.77.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> turnBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> degrees, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speed);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li></ul><hr><h3 id="tiltangle" tabindex="-1">tiltAngle() <a class="header-anchor" href="#tiltangle" aria-label="Permalink to &quot;tiltAngle()&quot;">​</a></h3><p>Use this method to manually tilt temi&#39;s head to a certain degree.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>degrees</td><td>int</td><td>The degrees you want to temi&#39;s head to tilt to.</td></tr><tr><td>speed</td><td>float</td><td>[Optional parameter] The coefficient of the maximum speed, the value range is 0~1. Support from 0.10.77.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tiltAngle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> degrees, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speed);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li><li><p><strong>Notes</strong></p><ul><li>Take into account that the tilt range is from <strong>-25</strong> degrees which means temi is looking all the way down until <strong>+55</strong> degrees which means it&#39;s looking all the way up.</li><li>0 degrees means temi is looking straight ahead.</li></ul></li></ul><hr><h3 id="tiltby" tabindex="-1">tiltBy() <a class="header-anchor" href="#tiltby" aria-label="Permalink to &quot;tiltBy()&quot;">​</a></h3><p>Use this method to manually tilt temi&#39;s head by a certain degree.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>degrees</td><td>int</td><td>The amount of degrees you want to tilt by</td></tr><tr><td>speed</td><td>float</td><td>[Optional parameter] The coefficient of the maximum speed, the value range is 0~1. Support from 0.10.77.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tiltBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> degrees, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> speed);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li><li><p><strong>Notes</strong></p><ul><li>Take into account that the tilt range is from <strong>-25</strong> degrees which means temi is looking all the way down until <strong>+55</strong> degrees which means it&#39;s looking all the way up.</li><li>0 degrees means temi is looking straight ahead.</li><li>It&#39;s recommended to use this method to make small tilt adjustments and not big ones, if you want temi to make bigger adjustments use <a href="#tiltAngle">tiltAngle()</a> instead.</li></ul></li></ul><hr><h3 id="stopmovement" tabindex="-1">stopMovement() <a class="header-anchor" href="#stopmovement" aria-label="Permalink to &quot;stopMovement()&quot;">​</a></h3><p>Use this method to manually stop temi from moving.</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> stopMovement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Notes</strong></p><ul><li>Use this method to abort any of the actions taken by the methods above.</li><li>Use this method to stop navigation commands as well.</li></ul></li></ul><hr><h3 id="patrol" tabindex="-1">patrol() <a class="header-anchor" href="#patrol" aria-label="Permalink to &quot;patrol()&quot;">​</a></h3><p>Use this method to patrol between locations.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>locations</td><td>List&lt;String&gt;</td><td>at least 3 valid locations, can be duplicated. Home base will be ignored and should not be included.</td></tr><tr><td>nonstop</td><td>boolean</td><td>[Optional parameter] if set as true, it will just arrive at the position of location, without tilt and turn, and then immediately head to next location. default as false</td></tr><tr><td>times</td><td>int</td><td>[how many times should it go on the route. 0: infinite, 1: once, and so on.</td></tr><tr><td>waiting</td><td>int</td><td>[Optional parameter] If [nonstop] is false, the time in seconds it should wait on each location. Range from 3 - 60, default is 3</td></tr></tbody></table></li><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>boolean</td><td>true if patrol is executed.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> patrol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> locations, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nonsotp, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> times, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> waiting);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>1.129.1</p></li></ul><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="onrobotliftedlistener" tabindex="-1">OnRobotLiftedListener <a class="header-anchor" href="#onrobotliftedlistener" aria-label="Permalink to &quot;OnRobotLiftedListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to perceive whether the robot is lifted.</p><h4 id="prototype" tabindex="-1">Prototype <a class="header-anchor" href="#prototype" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnRobotLiftedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>isLifted</td><td>boolean</td><td><code>true</code> means robot is lifted, <code>false</code> otherwise</td></tr><tr><td>reason</td><td>String</td><td>-</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onRobotLifted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isLifted, String reason);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnRobotLiftedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnRobotLiftedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnRobotLiftedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnRobotLiftedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnRobotLiftedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnRobotLiftedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.70</p></li></ul><hr><h3 id="onmovementvelocitychangedlistener" tabindex="-1">OnMovementVelocityChangedListener <a class="header-anchor" href="#onmovementvelocitychangedlistener" aria-label="Permalink to &quot;OnMovementVelocityChangedListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to listen to the velocity changes of movement.</p><h4 id="prototype-1" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-1" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnMovementVelocityChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-1" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-1" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>velocity</td><td>float</td><td>Velocity of movement, the unit is m/s</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onMovementVelocityChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> velocity);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-1" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-1" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnMovementVelocityChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnMovementVelocityChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnMovementVelocityChangedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-1" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-1" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnMovementVelocityChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnMovementVelocityChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnMovementVelocityChangedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.77</p></li></ul><hr><h3 id="onmovementstatuschangedlistener" tabindex="-1">OnMovementStatusChangedListener <a class="header-anchor" href="#onmovementstatuschangedlistener" aria-label="Permalink to &quot;OnMovementStatusChangedListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to listen to the status changes of movement.</p><h4 id="prototype-2" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-2" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnMovementStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="static-constant" tabindex="-1">Static constant <a class="header-anchor" href="#static-constant" aria-label="Permalink to &quot;Static constant&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Constant</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>TYPE_SKID_JOY</td><td>String</td><td>&quot;skidJoy&quot;</td><td>Movement type - skidJoy</td></tr><tr><td>TYPE_TURN_BY</td><td>String</td><td>&quot;turnBy&quot;</td><td>Movement type - turnBy</td></tr><tr><td>STATUS_START</td><td>String</td><td>&quot;start&quot;</td><td>Movement started</td></tr><tr><td>STATUS_GOING</td><td>String</td><td>&quot;going&quot;</td><td>Moving</td></tr><tr><td>STATUS_OBSTACLE_DETECTED</td><td>String</td><td>&quot;obstacle detected&quot;</td><td>Obstacle detected during the movement</td></tr><tr><td>STATUS_NODE_INACTIVE</td><td>String</td><td>&quot;node inactive&quot;</td><td>Node inactive</td></tr><tr><td>STATUS_CALCULATING</td><td>String</td><td>&quot;calculating&quot;</td><td>Calculating</td></tr><tr><td>STATUS_COMPLETE</td><td>String</td><td>&quot;complete&quot;</td><td>Movement completed</td></tr><tr><td>STATUS_ABORT</td><td>String</td><td>&quot;abort&quot;</td><td>Movement abort</td></tr></tbody></table><h4 id="abstract-methods-2" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-2" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>String</td><td>Movement type</td></tr><tr><td>status</td><td>String</td><td>Movement status</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onMovementStatusChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String type, String status);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-2" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-2" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnMovementStatusChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnMovementStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnMovementStatusChangedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-2" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-2" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnMovementStatusChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnMovementStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnMovementStatusChangedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.77</p></li></ul>`,64)]))}const k=e(n,[["render",o]]);export{c as __pageData,k as default};
