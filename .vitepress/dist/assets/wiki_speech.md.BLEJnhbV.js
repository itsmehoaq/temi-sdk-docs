import{_ as s,c as a,o as i,ag as e}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"Speech","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/speech.md","filePath":"wiki/speech.md"}'),n={name:"wiki/speech.md"};function r(h,t,l,d,p,o){return i(),a("div",null,t[0]||(t[0]=[e(`<h1 id="speech" tabindex="-1">Speech <a class="header-anchor" href="#speech" aria-label="Permalink to &quot;Speech&quot;">​</a></h1><p>temi&#39;s speech flow is comprised of four main components - wakeup, ASR (Automatic Speech Recognition), NLP (Natural language processing) and TTS (text to speech).</p><p>temi&#39;s SDK provides developers tools to utilize, customize and listen to any of the components.</p><br><h2 id="api-overview" tabindex="-1">API Overview <a class="header-anchor" href="#api-overview" aria-label="Permalink to &quot;API Overview&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Return</th><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>void</td><td><a href="#speak">speak(TtsRequest ttsRequest)</a></td><td>Ask temi to speak(play TTS)</td></tr><tr><td>void</td><td><a href="#cancelAllTtsRequests">cancelAllTtsRequests()</a></td><td>cancel TTS request</td></tr><tr><td>void</td><td><a href="#wakeup">wakeup()</a></td><td>Wake up temi</td></tr><tr><td>String</td><td><a href="#getWakeupWord">getWakeupWord()</a></td><td>Get current wake-up word</td></tr><tr><td>void</td><td><a href="#askQuestion">askQuestion(String question)</a></td><td>temi speak actively and wait for user&#39;s reply</td></tr><tr><td>void</td><td><a href="#finishConversation">finishConversation()</a></td><td>Finish a conversation(Stop recording for ASR)</td></tr><tr><td>void</td><td><a href="#startDefaultNlu">startDefaultNlu(String text, SttLanguage sttLanguage)</a></td><td>Trigger default NLU service</td></tr><tr><td>boolean</td><td><a href="#setTtsVoice">setTtsVoice(TtsVoice ttsVoice)</a></td><td>Set TTS voice, speed, and pitch</td></tr><tr><td><a href="#ttsVoice">TtsVoice</a></td><td><a href="#getTtsVoice">getTtsVoice()</a></td><td>Trigger default NLU service</td></tr><tr><td>int</td><td><a href="#setasrlanguages">setAsrLanguages()</a></td><td>Set system ASR languages</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="#ttsListener">TtsListener</a></td><td>TTS status listener</td></tr><tr><td><a href="#wakeupWordListener">WakeupWordListener</a></td><td>Wake-up event listener</td></tr><tr><td><a href="#asrListener">AsrListener</a></td><td>ASR result listener</td></tr><tr><td><a href="#conversationViewAttachesListener">ConversationViewAttachesListener</a></td><td>Conversation view attaches listener</td></tr><tr><td><a href="#onConversationStatusChangedListener">OnConversationStatusChangedListener</a></td><td>Listener for status chagned of Conversation view</td></tr><tr><td><a href="#onTtsVisualizerWaveFormDataChangedListener">OnTtsVisualizerWaveFormDataChangedListener</a></td><td>Listener for wave form data changes of TTS audio visualizer</td></tr><tr><td><a href="#onTtsVisualizerFftDataChangedListener">OnTtsVisualizerFftDataChangedListener</a></td><td>Listener for fft data changes of TTS audio visualizer</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Model</th><th>Description</th></tr></thead><tbody><tr><td><a href="#ttsRequest">TtsRequest</a></td><td>TTS request instance</td></tr><tr><td><a href="#ttsVoice">TtsVoice</a></td><td>TTS voice configuration</td></tr><tr><td><a href="#gender">Gender</a></td><td>TTS voice gender</td></tr><tr><td><a href="#sttlanguage">SttLanguage</a></td><td>ASR / STT languages</td></tr><tr><td><a href="#wakeuprequest">WakeupRequest</a></td><td>Wakeup behavior</td></tr><tr><td><a href="#wakeuporigin">WakeupOrigin</a></td><td>Wakeup Origin</td></tr></tbody></table><br><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="speak" tabindex="-1">speak() <a class="header-anchor" href="#speak" aria-label="Permalink to &quot;speak()&quot;">​</a></h3><p>Use this method to let temi speak something that from the parameter <code>ttsRequest</code> of this method.</p><p>From 134 verison, if the TtsRequest.id is the same, the requested will be queued when there is an ongoing TTS.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsRequest</td><td><a href="#ttsRequest">TtsRequest</a></td><td>An object of type TtsRequest in this object you will add the text to be spoken.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> speak</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsRequest ttsRequest);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li></ul><hr><h3 id="cancelallttsrequests" tabindex="-1">cancelAllTtsRequests() <a class="header-anchor" href="#cancelallttsrequests" aria-label="Permalink to &quot;cancelAllTtsRequests()&quot;">​</a></h3><p>Stops currently processed TTS request and empty the queue.</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancelAllTtsRequests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p></li></ul><hr><h3 id="wakeup" tabindex="-1">wakeup() <a class="header-anchor" href="#wakeup" aria-label="Permalink to &quot;wakeup()&quot;">​</a></h3><p>Use this method to trigger temi&#39;s wakeup programmatically.</p><p>In 132 version, this method can take an optional list to make temi listen to specific langauges. The languages set will temporarily override setAsrLanguages() for current wake up session. Max. 3 extra languages can be set.</p><p>In 133 version there is a new overload method wakeup(SttRequest sttRequest) In 135 version there is a new parameter WakeupRequest</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>languages</td><td>List&lt;<a href="#sttlanguage">SttLanguage</a>&gt;</td><td>Langauges for STT, empty list to use system language. Add in 1.132.0, works with 132 version</td></tr><tr><td>wakeupRequest</td><td>WakeupRequest</td><td>Control behavior of wake up. Add in 1.135.1, works with 135 version</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>sttRequest</td><td>SttRequest</td><td>Contains languages, and some experimental paramters, added in 133.</td></tr><tr><td>wakeupRequest</td><td>WakeupRequest</td><td>Control behavior of wake up. Add in 1.135.1, works with 135 version</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wakeup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(List\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SttLanguege</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> languages, WakeupRequest wakeupRequest);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wakeup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SttRequest sttRequest, WakeupRequest wakeupRequest);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.49</p></li></ul><hr><h3 id="getwakeupword" tabindex="-1">getWakeupWord() <a class="header-anchor" href="#getwakeupword" aria-label="Permalink to &quot;getWakeupWord()&quot;">​</a></h3><p>Use this method to get temi&#39;s wake word assistant.</p><ul><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>String</td><td>Wake-up word</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getWakeupWord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.49</p></li></ul><hr><h3 id="askquestion" tabindex="-1">askQuestion() <a class="header-anchor" href="#askquestion" aria-label="Permalink to &quot;askQuestion()&quot;">​</a></h3><p>Use this method to let temi actively speak to the user and wait for the user to answer.</p><p>In 133 version, there is an overload method to pass TtsRequest, and SttRequest parameter.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>question</td><td>String</td><td>The text to be spoken</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>question</td><td>TtsRequest</td><td>The text to be spoken, support all TtsRequest parameters added in 133 version.</td></tr><tr><td>sttRequest</td><td>SttRequest</td><td>Control the speech in the STT session after the TTS, similiar to <code>wakeup(SttRequest sttRequest)</code>, default is null, added in 133 version.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> askQuestion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String question);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> askQuestion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsReqeust question, SttRequest sttRequest);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.63</p></li><li><p><strong>Recommendation</strong></p><p>A custom dialog flow can be realized by cooperating with <a href="#asrListener">AsrListener</a>. For details, please refer to <a href="https://github.com/robotemi/sdk/blob/master/sample/src/main/java/com/robotemi/sdk/sample/MainActivity.java#L627-L660" target="_blank" rel="noreferrer">Sample</a> code.</p></li></ul><hr><h3 id="finishconversation" tabindex="-1">finishConversation() <a class="header-anchor" href="#finishconversation" aria-label="Permalink to &quot;finishConversation()&quot;">​</a></h3><p>Use this method to finish the conversation (Stop recording for ASR).</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> finishConversation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.63</p></li></ul><hr><h3 id="startdefaultnlu" tabindex="-1">startDefaultNlu() <a class="header-anchor" href="#startdefaultnlu" aria-label="Permalink to &quot;startDefaultNlu()&quot;">​</a></h3><p>Use this method to trigger the system&#39;s default natural language understanding (NLU). If you want to directly trigger system skills such as weather or music in your skill, you can directly pass in &quot;What&#39;s the wheather today&quot; or &quot;Play Music&quot; as a parameter and invoke this method to achieve it.</p><p>In 1.133.0 version. It will allow to assign system langauge, to trigger an NLU recognition of target language.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>text</td><td>String</td><td>Natural language text to be processed</td></tr><tr><td>sttLanguage</td><td><a href="#sttlanguage">SttLanguage</a></td><td>Language of NLU, default as SttLangauge.SYSTEM, added in 1.133.0</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> startDefaultNlu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String text, SttLanguage sttLanguage);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>Selected Kiosk</p></li><li><p><strong>Support from</strong></p><p>0.10.70</p></li><li><p><strong>Note</strong></p><p>This interface can only be called once every 5 seconds.</p></li></ul><hr><h3 id="setttsservice" tabindex="-1">setTtsService() <a class="header-anchor" href="#setttsservice" aria-label="Permalink to &quot;setTtsService()&quot;">​</a></h3><p>Use this method to configure your own TTS service. After the correct configuration, temi&#39;s TTS function requirements will depend on this TTS service. If you want to use temi&#39;s original TTS service, call method <a href="#speak">speak()</a> to do that.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsService</td><td><a href="#ITtsService">ITtsService</a></td><td>The instance of class that implemented <a href="#ITtsService">ITtsService</a>. If the passed paramenter is <code>null</code>, the TTS service will be unbound.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setTtsService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ITtsService ttsService);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p><code>com.robotemi.sdk.metadata.OVERRIDE_TTS</code> declared in the manifest to override original TTS</p></li><li><p><strong>Support from</strong></p><p>0.10.77</p></li></ul><hr><h3 id="publishttsstatus" tabindex="-1">publishTtsStatus() <a class="header-anchor" href="#publishttsstatus" aria-label="Permalink to &quot;publishTtsStatus()&quot;">​</a></h3><p>Use this method to publish the TTS status from your TTS service to temi.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsReqeust</td><td><a href="#ttsReqeust">TtsRequest</a></td><td>Current instance of <a href="#ttsReqeust">TtsRequest</a> (need to include status))</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setTtsService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsRequest ttsReqeust);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p><code>com.robotemi.sdk.metadata.OVERRIDE_TTS</code> declared in the manifest to override original TTS</p></li><li><p><strong>Support from</strong></p><p>0.10.77</p></li></ul><hr><h3 id="setttsvoice" tabindex="-1">setTtsVoice() <a class="header-anchor" href="#setttsvoice" aria-label="Permalink to &quot;setTtsVoice()&quot;">​</a></h3><p>Set TTS voice, speed and pitch. Only available for temi Global version.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsVoice</td><td><a href="#ttsVoice">TtsVoice</a></td><td>TtsVoice configuration</td></tr></tbody></table></li><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>boolean</td><td>true if set is successful</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setTtsVoice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsVoice ttsVoice);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>SETTINGS</p></li><li><p><strong>Support from</strong></p><p>1.129.0</p></li></ul><hr><h3 id="getttsvoice" tabindex="-1">getTtsVoice() <a class="header-anchor" href="#getttsvoice" aria-label="Permalink to &quot;getTtsVoice()&quot;">​</a></h3><p>Get TTS voice, speed and pitch. Only available for temi Global version.</p><ul><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="#ttsVoice">TtsVoice</a></td><td>current TTS voice configuration</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TtsVoice </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTtsVoice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>1.129.0</p></li></ul><hr><h3 id="setasrlanguages" tabindex="-1">setAsrLanguages() <a class="header-anchor" href="#setasrlanguages" aria-label="Permalink to &quot;setAsrLanguages()&quot;">​</a></h3><p>Change ASR langauges, this settings will persist when this kiosk app is running. Max. 3 extra languages can be set.</p><p>This languages can be temporarily overriden by wakeup()</p><ul><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>int</td><td>0 OK, -1 invalid, 403 no permission</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setAsrLanguages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(List\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SttLanguage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> languages);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>KIOSK</p></li><li><p><strong>Support from</strong></p><p>1.132.0</p></li></ul><br><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="ttslistener" tabindex="-1">TtsListener <a class="header-anchor" href="#ttslistener" aria-label="Permalink to &quot;TtsListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to get TTS status changes.</p><h4 id="prototype" tabindex="-1">Prototype <a class="header-anchor" href="#prototype" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.TtsListener {}</span></span></code></pre></div><h4 id="abstract-methods" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsRequest</td><td><a href="#ttsRequest">TtsRequest</a></td><td>TTS request object that holds its text content and status</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onTtsStatusChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsRequest ttsRequest);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>TtsListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addTtsListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>TtsListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeTtsListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li></ul><hr><h3 id="wakeupwordlistener" tabindex="-1">WakeupWordListener <a class="header-anchor" href="#wakeupwordlistener" aria-label="Permalink to &quot;WakeupWordListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to get wake word value when triggered by the user.</p><h4 id="prototype-1" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-1" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.WakeupWordListener {}</span></span></code></pre></div><h4 id="abstract-methods-1" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-1" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>wakeupWord</td><td>String</td><td>The wakeup word used to trigger</td></tr><tr><td>direction</td><td>int</td><td><ul><li>0 - temi was triggered from the front</li><li>90 - temi was triggered from the left</li><li>180 - temi was triggered from the back</li><li>270 - temi was triggered from the right</li><li>555 - cannot detect wakeup direction</li></ul></td></tr><tr><td>origin</td><td>WakeupOrigin</td><td>The origin of this wakeup event</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onWakeupWord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String wakeupWord, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direction, WakeupOrigin origin);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-1" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-1" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>WakeupWordListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addWakeupWordListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WakeupWordListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-1" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-1" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>WakeupWordListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeWakeupWordListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WakeupWordListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li></ul><hr><h3 id="asrlistener" tabindex="-1">AsrListener <a class="header-anchor" href="#asrlistener" aria-label="Permalink to &quot;AsrListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to get the ASR result.</p><p>From 132 version, both the text and language will be returned.</p><h4 id="prototype-2" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-2" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.AsrListener {}</span></span></code></pre></div><h4 id="abstract-methods-2" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-2" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>asrResult</td><td>String</td><td>The ASR result</td></tr><tr><td>sttLanguage</td><td>SttLanguage</td><td>The language of the ASR result (Added in 132)</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onAsrResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String asrResult, SttLanguage sttLanguage);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-2" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-2" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>AsrListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addAsrListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AsrListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-2" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-2" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>AsrListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeAsrListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AsrListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.53</p></li></ul><hr><h3 id="conversationviewattacheslistener" tabindex="-1">ConversationViewAttachesListener <a class="header-anchor" href="#conversationviewattacheslistener" aria-label="Permalink to &quot;ConversationViewAttachesListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to listen if the conversation view attaches.</p><h4 id="prototype-3" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-3" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Robot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ConversationViewAttachesListener {}</span></span></code></pre></div><h4 id="abstract-methods-3" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-3" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>isAttached</td><td>boolean</td><td><code>true</code> means the conversation view attaches, <code>false</code> otherwise</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onConversationAttaches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isAttached);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-3" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-3" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>ConversationViewAttachesListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addConversationViewAttachesListenerListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ConversationViewAttachesListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-3" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-3" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>ConversationViewAttachesListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeConversationViewAttachesListenerListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ConversationViewAttachesListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.36</p></li></ul><hr><h3 id="onconversationstatuschangedlistener" tabindex="-1">OnConversationStatusChangedListener <a class="header-anchor" href="#onconversationstatuschangedlistener" aria-label="Permalink to &quot;OnConversationStatusChangedListener&quot;">​</a></h3><p>Set your context to implement this interface and override its&#39; abstract method to listen to the status and text changes of the Conversation layer.</p><p><strong>Note:</strong> Only the selected Kiosk App declared in the AndroidManifest.xml file to override the original conversation layer UI can receive the related callback data.</p><h4 id="prototype-4" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-4" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnConversationStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="static-constants" tabindex="-1">Static constants <a class="header-anchor" href="#static-constants" aria-label="Permalink to &quot;Static constants&quot;">​</a></h4><p>All constants here are only for the status of Conversation layer.</p><table tabindex="0"><thead><tr><th>Constant</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>IDLE</td><td>int</td><td>0</td><td>Idle, no useriteraction</td></tr><tr><td>LISTENING</td><td>int</td><td>1</td><td>Listening user&#39;s voice</td></tr><tr><td>THINKING</td><td>int</td><td>2</td><td>Doing NLP</td></tr><tr><td>SPEAKING</td><td>int</td><td>3</td><td>Playing TTS</td></tr></tbody></table><h4 id="abstract-methods-4" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-4" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>status</td><td>int</td><td>Status of Conversation layer</td></tr><tr><td>text</td><td>String</td><td>Text of Conversation layer</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onConversationStatusChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> status, String text);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-4" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-4" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnConversationStatusChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnConversationStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnConversationStatusChangedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-4" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-4" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnConversationStatusChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnConversationStatusChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnConversationStatusChangedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.72</p></li></ul><hr><h3 id="onttsvisualizerwaveformdatachangedlistener" tabindex="-1">OnTtsVisualizerWaveFormDataChangedListener <a class="header-anchor" href="#onttsvisualizerwaveformdatachangedlistener" aria-label="Permalink to &quot;OnTtsVisualizerWaveFormDataChangedListener&quot;">​</a></h3><p>Set your context to implements this interface and override its&#39; abstract method to listen to the wave form data changes of the TTS audio visualizer.</p><h4 id="prototype-5" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-5" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnTtsVisualizerWaveFormDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-5" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-5" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>waveForm</td><td>byte[]</td><td>Wave form data</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onTtsVisualizerWaveFormDataChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] waveForm);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-5" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-5" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnTtsVisualizerWaveFormDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnTtsVisualizerWaveFormDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnTtsVisualizerWaveFormDataChangedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-5" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-5" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnTtsVisualizerWaveFormDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnTtsVisualizerWaveFormDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnTtsVisualizerWaveFormDataChangedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.72</p></li></ul><hr><h3 id="onttsvisualizerfftdatachangedlistener" tabindex="-1">OnTtsVisualizerFftDataChangedListener <a class="header-anchor" href="#onttsvisualizerfftdatachangedlistener" aria-label="Permalink to &quot;OnTtsVisualizerFftDataChangedListener&quot;">​</a></h3><p>Set your context to implements this interface and override its&#39; abstract method to listen to the fft data changes of the TTS audio visualizer.</p><h4 id="prototype-6" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-6" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnTtsVisualizerFftDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-6" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-6" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>fft</td><td>byte[]</td><td>fft data</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnTtsVisualizerFftDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] fft);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-6" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-6" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnTtsVisualizerFftDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnTtsVisualizerFftDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnTtsVisualizerFftDataChangedListener listener);</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-6" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-6" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnTtsVisualizerFftDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnTtsVisualizerFftDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnTtsVisualizerFftDataChangedListener listener);</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.72</p></li></ul><hr><h3 id="ittsservice" tabindex="-1">ITtsService <a class="header-anchor" href="#ittsservice" aria-label="Permalink to &quot;ITtsService&quot;">​</a></h3><p>Implement this interface and override the abstract methods, and use method <a href="#setTtsService">setTtsService()</a> to bind the TTS service.</p><h4 id="prototype-7" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-7" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.voice;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ITtsService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-7" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-7" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><h5 id="speak-1" tabindex="-1">speak() <a class="header-anchor" href="#speak-1" aria-label="Permalink to &quot;speak()&quot;">​</a></h5><p>temi will call this method indirectly to play TTS.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>ttsRequest</td><td><a href="#ttsRequest">TtsRequest</a></td><td>Pending <a href="#ttsRequest">TtsRequest</a> instance</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> speak</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(TtsRequest ttsRequest);</span></span></code></pre></div></li></ul><h5 id="cancel" tabindex="-1">cancel() <a class="header-anchor" href="#cancel" aria-label="Permalink to &quot;cancel()&quot;">​</a></h5><p>temi will call this method indirectly to cancel(stop) current TTS.</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li></ul><h5 id="pause" tabindex="-1">pause() <a class="header-anchor" href="#pause" aria-label="Permalink to &quot;pause()&quot;">​</a></h5><p>temi will call this method indirectly to pause current TTS.</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pause</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li></ul><h5 id="resume" tabindex="-1">resume() <a class="header-anchor" href="#resume" aria-label="Permalink to &quot;resume()&quot;">​</a></h5><p>temi will call this method indirectly to resume current TTS.</p><ul><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Support from</strong></p><p>0.10.77</p></li></ul><br><h2 id="models" tabindex="-1">Models <a class="header-anchor" href="#models" aria-label="Permalink to &quot;Models&quot;">​</a></h2><h3 id="ttsrequest" tabindex="-1">TtsRequest <a class="header-anchor" href="#ttsrequest" aria-label="Permalink to &quot;TtsRequest&quot;">​</a></h3><p>Request object passed to temi, which contains all the information temi needs to in order to speak and for the skill to track its&#39; request.</p><h4 id="prototype-8" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-8" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TtsRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="subclass" tabindex="-1">Subclass <a class="header-anchor" href="#subclass" aria-label="Permalink to &quot;Subclass&quot;">​</a></h4><ul><li><p><strong>Status</strong></p><ul><li><p><strong>The status currently in use</strong></p><table tabindex="0"><thead><tr><th>Status</th><th>description</th></tr></thead><tbody><tr><td>STARTED</td><td>Start playing</td></tr><tr><td>COMPLETED</td><td>Finish playing</td></tr><tr><td>ERROR</td><td>Errors occurred while playing</td></tr><tr><td>NOT_ALLOWED</td><td>Play is not allowed</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PROCESSING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    STARTED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    COMPLETED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ERROR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NOT_ALLOWED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li><li><p><strong>Language</strong></p><ul><li><p><strong>Current supported TTS language</strong></p><table tabindex="0"><thead><tr><th>Language</th><th>Description</th></tr></thead><tbody><tr><td>SYSTEM(0)</td><td>Follow system</td></tr><tr><td>EN_US(1)</td><td>English (United States)</td></tr><tr><td>ZH_CN(2)</td><td>Chinese (Mandarin, Simplified)</td></tr><tr><td>ZH_HK(3)</td><td>Chinese (Cantonese, Traditional)</td></tr><tr><td>ZH_TW(4)</td><td>Chinese (Taiwanese Mandarin)</td></tr><tr><td>TH_TH(5)</td><td>Thai (Thailand)</td></tr><tr><td>HE_IL(6)</td><td>Hebrew (Israel)</td></tr><tr><td>KO_KR(7)</td><td>Korean (Korea)</td></tr><tr><td>JA_JP(8)</td><td>Japanese (Japan)</td></tr><tr><td>ID_ID(10)</td><td>Indonesian (Indonesia)</td></tr><tr><td>DE_DE(11)</td><td>German (Germany)</td></tr><tr><td>FR_FR(12)</td><td>French (France)</td></tr><tr><td>FR_CA(13)</td><td>French (Canada)</td></tr><tr><td>PT_BR(14)</td><td>Portuguese (Brazil)</td></tr><tr><td>AR_EG(15)</td><td>Arabic (Egypt)</td></tr><tr><td>RU_RU(18)</td><td>Russian (Russia)</td></tr><tr><td>IT_IT(19)</td><td>Italian (Italy)</td></tr><tr><td>PL_PL(20)</td><td>Polish (Poland)</td></tr><tr><td>ES_ES(21)</td><td>Spanish (Spain)</td></tr><tr><td>CA_ES(22)</td><td>Catalan (Spain) (supported from 130 version)</td></tr><tr><td>HI_IN(23)</td><td>Hindi (supported from 130 version)</td></tr><tr><td>ET_EE(24)</td><td>Estonian (supported from 131 version)</td></tr><tr><td>TR_TR(25)</td><td>Turkish (supported from 131 version)</td></tr><tr><td>EN_IN(26)</td><td>English (India) (supported from 133 version)</td></tr><tr><td>MS_MY(27)</td><td>Malay (supported from 134 version)</td></tr><tr><td>VI_VN(28)</td><td>Vietnamese (supported from 134 version)</td></tr><tr><td>EL_GR(29)</td><td>Greek (supported from 134 version)</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    SYSTEM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EN_US</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_CN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_HK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_TW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    TH_TH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    HE_IL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    KO_KR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    JA_JP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    IN_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ID_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    DE_DE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    FR_FR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    FR_CA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PT_BR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    AR_EG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    AR_AE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    AR_XA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    RU_RU</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    IT_IT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PL_PL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ES_ES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    CA_ES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    HI_IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ET_EE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)，</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TR_TR(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EN_IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    MS_MY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    VI_VN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EL_GR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">29</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ul></li></ul><h4 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td><a href="https://developer.android.com/reference/java/util/UUID" target="_blank" rel="noreferrer">UUID</a></td><td>Unique number that identifies each tts request</td></tr><tr><td>speech</td><td>String</td><td>The text to be spoken</td></tr><tr><td>packageName</td><td>String</td><td>Skill package name so that temi knows who made the request</td></tr><tr><td>status</td><td><a href="#ttsRequestStatus">Status</a></td><td>Status of the request</td></tr><tr><td>isShowOnConversationLayer</td><td>boolean</td><td>Should the conversation line be shown when temi speaks the text. <strong>Note:</strong> Only relevant for &#39;Hey temi&#39; assistant skills</td></tr><tr><td>language</td><td>int</td><td>Language</td></tr><tr><td>showAnimationOnly</td><td>boolean</td><td>true if you want to show a face animation while the speech is ongoing.<br>This only works if there is an assigned interaction animation in temi Settings,<br>otherwise it will just display the text on screen without a face animation.<br>Set this as true will override <code>isShowOnConversationLayer</code> if that value is set to false</td></tr><tr><td>cached</td><td>boolean</td><td>true if you want to have this tts cached. Default as false.<br>If there is cache, it will be spoken offline.<br> This is useful for TTS from some sentences you have in the strings.xml (Supported from 129 version)</td></tr></tbody></table><h4 id="static-methods" tabindex="-1">Static methods <a class="header-anchor" href="#static-methods" aria-label="Permalink to &quot;Static methods&quot;">​</a></h4><p>Create a TtsRequest object and pass it to <a href="#speak">speak(TtsRequest ttsRequest)</a> method to play TTS. Only <code>speech</code> is mandatory. The other parameters are optional.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>speech</td><td>String</td><td>The text to be spoken</td></tr><tr><td>isShowOnConversationLayer</td><td>boolean</td><td>default as true</td></tr><tr><td>language</td><td><a href="#ttsLanguage">Language</a></td><td>default as <code>Language.SYSTEM</code></td></tr><tr><td>showAnimationOnly</td><td>boolean</td><td>default as false</td></tr><tr><td>cached</td><td>boolean</td><td>default as false</td></tr></tbody></table></li><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><a href="#ttsRequest">TtsRequest</a></td><td>TTS request object created by this method</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TtsRequest </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String speech, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isShowOnConversationLayer);</span></span></code></pre></div></li></ul><hr><h3 id="ttsvoice" tabindex="-1">TtsVoice <a class="header-anchor" href="#ttsvoice" aria-label="Permalink to &quot;TtsVoice&quot;">​</a></h3><p>Tts voice configuration.</p><h4 id="prototype-9" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-9" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.voice.model;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TtsVoice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="attributes-1" tabindex="-1">Attributes <a class="header-anchor" href="#attributes-1" aria-label="Permalink to &quot;Attributes&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>gender</td><td><a href="#gender">Gender</a></td><td>only female and male can be used as parameter</td></tr><tr><td>speed</td><td>float</td><td>0.5 - 2.0, stepping by 0.1, default 1.0</td></tr><tr><td>pitch</td><td>int</td><td>-10 - 10, stepping by 1, default 0</td></tr></tbody></table><hr><h3 id="gender" tabindex="-1">Gender <a class="header-anchor" href="#gender" aria-label="Permalink to &quot;Gender&quot;">​</a></h3><p>Tts voice gender.</p><h4 id="prototype-10" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-10" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.constants;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Gender {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  FEMALE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MALE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GIRL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BOY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UNKNOWN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="sttlanguage" tabindex="-1">SttLanguage <a class="header-anchor" href="#sttlanguage" aria-label="Permalink to &quot;SttLanguage&quot;">​</a></h3><ul><li><p><strong>Current supported ASR language</strong></p><table tabindex="0"><thead><tr><th>Language</th><th>Description</th></tr></thead><tbody><tr><td>SYSTEM(0)</td><td>Follow system</td></tr><tr><td>EN_US(1)</td><td>English (United States)</td></tr><tr><td>ZH_CN(2)</td><td>Chinese (Mandarin, Simplified)</td></tr><tr><td>JA_JP(3)</td><td>Japanese (Japan)</td></tr><tr><td>KO_KR(4)</td><td>Korean (Korea)</td></tr><tr><td>ZH_HK(5)</td><td>Chinese (Cantonese, Traditional)</td></tr><tr><td>ZH_TW(6)</td><td>Chinese (Taiwanese Mandarin)</td></tr><tr><td>DE_DE(7)</td><td>German (Germany)</td></tr><tr><td>TH_TH(8)</td><td>Thai (Thailand)</td></tr><tr><td>IN_ID(9)</td><td>Indonesian (Indonesia)</td></tr><tr><td>PT_BR(10)</td><td>Portuguese (Brazil)</td></tr><tr><td>AR_EG(11)</td><td>Arabic (Egypt)</td></tr><tr><td>FR_CA(12)</td><td>French (Canada)</td></tr><tr><td>FR_FR(13)</td><td>French (France)</td></tr><tr><td>ES_ES(14)</td><td>Spanish (Spain)</td></tr><tr><td>CA_ES(15)</td><td>Catalan (Spain)</td></tr><tr><td>IW_IL(16)</td><td>Hebrew (Israel)</td></tr><tr><td>IT_IT(17)</td><td>Italian (Italy)</td></tr><tr><td>ET_EE(18)</td><td>Estonian</td></tr><tr><td>TR_TR(19)</td><td>Turkish</td></tr><tr><td>HI_IN(20)</td><td>Hindi, added in 1.133.0 version</td></tr><tr><td>EN_IN(21)</td><td>English (India), added in 1.133.0 version</td></tr><tr><td>MS_MY(22)</td><td>Malay, added in 134 version</td></tr><tr><td>VI_VN(23)</td><td>Vietnamese, added in 134 version</td></tr><tr><td>RU_RU(24)</td><td>Russian, added in 134 version</td></tr><tr><td>EL_GR(25)</td><td>Greek, added in 134 version</td></tr></tbody></table></li></ul><h4 id="prototype-11" tabindex="-1"><strong>Prototype</strong> <a class="header-anchor" href="#prototype-11" aria-label="Permalink to &quot;**Prototype**&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SttLanguage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    SYSTEM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EN_US</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_CN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    JA_JP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    KO_KR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_HK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ZH_TW</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    DE_DE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    TH_TH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    IN_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    PT_BR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    AR_EG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    FR_CA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    FR_FR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ES_ES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    CA_ES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    IW_IL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    IT_IT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ET_EE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    TR_TR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    HI_IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EN_IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    MS_MY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    VI_VN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    RU_RU</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    EL_GR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h3 id="wakeuprequest" tabindex="-1">WakeupRequest <a class="header-anchor" href="#wakeuprequest" aria-label="Permalink to &quot;WakeupRequest&quot;">​</a></h3><p>Wakeup request</p><h4 id="prototype-12" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-12" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WakeupRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wakeupResponse: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Boolean</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="attributes-2" tabindex="-1">Attributes <a class="header-anchor" href="#attributes-2" aria-label="Permalink to &quot;Attributes&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>wakeupResponse</td><td>Boolean</td><td>whether wakeup response will be triggered</td></tr></tbody></table><hr><h3 id="wakeuporigin" tabindex="-1">WakeupOrigin <a class="header-anchor" href="#wakeuporigin" aria-label="Permalink to &quot;WakeupOrigin&quot;">​</a></h3><p>Wakeup origin</p><h4 id="prototype-13" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-13" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WakeupOrigin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ROBOX,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ANDROID,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  TOP_BAR,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  SDK,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ANALOG,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  UNKNOWN,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="attributes-3" tabindex="-1">Attributes <a class="header-anchor" href="#attributes-3" aria-label="Permalink to &quot;Attributes&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Attribute</th><th>Description</th></tr></thead><tbody><tr><td>ROBOX</td><td>listening from Robox, apply for V3</td></tr><tr><td>ANDROID</td><td>listening from Android, apply for temi GO and temi Platform</td></tr><tr><td>TOP_BAR</td><td>trigger by touch on top bar wake up button</td></tr><tr><td>SDK</td><td>trigger by SDK wakeup() method from an app</td></tr><tr><td>ANALOG</td><td>trigger by temi internal flow, like dynamic mode auto-listening, continuous conversation etc.</td></tr><tr><td>UNKNOWN</td><td>unknown origin under current SDK version</td></tr></tbody></table><br><h2 id="override-original-voice-flow" tabindex="-1">Override original voice flow <a class="header-anchor" href="#override-original-voice-flow" aria-label="Permalink to &quot;Override original voice flow&quot;">​</a></h2><h3 id="override-the-nlp" tabindex="-1">Override the NLP <a class="header-anchor" href="#override-the-nlp" aria-label="Permalink to &quot;Override the NLP&quot;">​</a></h3><h4 id="steps" tabindex="-1">Steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;Steps&quot;">​</a></h4><ul><li><p>Add the following <code>&lt;meta-data&gt;</code>s under the <code>&lt;application&gt;</code> element to AndroidManifest.xml file:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Kiosk mode is required </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_kiosk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_override_nlu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span></code></pre></div></li><li><p><a href="#asrListener">Listen to the ASR</a> and access your own NLP service in its callback method.</p></li><li><p>Operate in Launcher: <em>Settings &gt; Kiosk &gt; Select your skill</em>. Or request to be the selected Kiosk App by method <a href="https://github.com/robotemi/sdk/wiki/kiosk-mode#requestToBeKioskApp" target="_blank" rel="noreferrer"><code>Robot.getInstance().requestToBeKioskApp()</code></a>.</p></li></ul><h4 id="required-permissions" tabindex="-1">Required permissions <a class="header-anchor" href="#required-permissions" aria-label="Permalink to &quot;Required permissions&quot;">​</a></h4><p>Selected Kiosk</p><h4 id="support-from" tabindex="-1">Support from <a class="header-anchor" href="#support-from" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.63</p><hr><h3 id="override-the-asr" tabindex="-1">Override the ASR <a class="header-anchor" href="#override-the-asr" aria-label="Permalink to &quot;Override the ASR&quot;">​</a></h3><h4 id="steps-1" tabindex="-1">Steps <a class="header-anchor" href="#steps-1" aria-label="Permalink to &quot;Steps&quot;">​</a></h4><ul><li><p>Add the following <code>&lt;meta-data&gt;</code>s under the <code>&lt;application&gt;</code> element to AndroidManifest.xml file:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Kiosk mode is required </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_kiosk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_override_stt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span></code></pre></div></li><li><p><a href="#wakeupWordListener">Listen to the wake-up event</a> and access your own ASR service in its callback method.</p></li><li><p>Operate in Launcher: <em>Settings &gt; Kiosk &gt; Select your skill</em>. Or request to be the selected Kiosk App by method <a href="https://github.com/robotemi/sdk/wiki/kiosk-mode#requestToBeKioskApp" target="_blank" rel="noreferrer"><code>Robot.getInstance().requestToBeKioskApp()</code></a>.</p></li></ul><h4 id="required-permissions-1" tabindex="-1">Required permissions <a class="header-anchor" href="#required-permissions-1" aria-label="Permalink to &quot;Required permissions&quot;">​</a></h4><p>Selected Kiosk</p><h4 id="support-from-1" tabindex="-1">Support from <a class="header-anchor" href="#support-from-1" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.70</p><hr><h3 id="override-the-conversation-layer" tabindex="-1">Override the Conversation layer <a class="header-anchor" href="#override-the-conversation-layer" aria-label="Permalink to &quot;Override the Conversation layer&quot;">​</a></h3><h4 id="steps-2" tabindex="-1">Steps <a class="header-anchor" href="#steps-2" aria-label="Permalink to &quot;Steps&quot;">​</a></h4><ul><li><p>Add the following <code>&lt;meta-data&gt;</code>s under the <code>&lt;application&gt;</code> element to AndroidManifest.xml file:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Kiosk mode is required </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_kiosk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_override_conversation_layer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span></code></pre></div></li><li><p><a href="#onConversationStatusChangedListener">Listen to onConversationStatusChangedListener</a> and draw the UI according to the data(status, text) from its callback method.</p></li><li><p>Operate in Launcher <em>Settings &gt; App &gt; Kiosk &gt; Select your skill</em>. Or request to be the selected Kiosk App by method <a href="https://github.com/robotemi/sdk/wiki/kiosk-mode#requestToBeKioskApp" target="_blank" rel="noreferrer"><code>Robot.getInstance().requestToBeKioskApp()</code></a>.</p></li></ul><h4 id="required-permissions-2" tabindex="-1">Required permissions <a class="header-anchor" href="#required-permissions-2" aria-label="Permalink to &quot;Required permissions&quot;">​</a></h4><p>Selected Kiosk</p><h4 id="support-from-2" tabindex="-1">Support from <a class="header-anchor" href="#support-from-2" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.72</p><hr><h3 id="override-the-tts" tabindex="-1">Override the TTS <a class="header-anchor" href="#override-the-tts" aria-label="Permalink to &quot;Override the TTS&quot;">​</a></h3><h4 id="steps-3" tabindex="-1">Steps <a class="header-anchor" href="#steps-3" aria-label="Permalink to &quot;Steps&quot;">​</a></h4><ul><li><p>Add the following <code>&lt;meta-data&gt;</code>s under the <code>&lt;application&gt;</code> element to AndroidManifest.xml file:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Kiosk mode is required </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_kiosk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">meta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@string/metadata_override_tts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /&gt;</span></span></code></pre></div></li><li><p>Implement interface <a href="#ITtsService">ITtsService</a> and override methods <code>speak()</code>, <code>cancel()</code>, <code>pause()</code>, <code>resume()</code> . temi will call the corresponding method to achieve TTS requirements.</p></li><li><p>Use method <a href="#setTtsService">setTtsService()</a> to bind the instance of the class that implemented <a href="#ITtsService">ITtsService</a> in the previous step.</p></li><li><p><strong>[Very important]</strong> Use method <a href="#publishTtsStatus">publishTtsStatus()</a> to publish the TTS status to temi, temi needs these status to respond things(UI, Sequence steps).</p></li><li><p>Operate in Launcher <em>Settings &gt; App &gt; Kiosk &gt; Select your skill</em>. Or request to be the selected Kiosk App by method <a href="https://github.com/robotemi/sdk/wiki/kiosk-mode#requestToBeKioskApp" target="_blank" rel="noreferrer"><code>Robot.getInstance().requestToBeKioskApp()</code></a>.</p></li><li><p>Refer to <a href="https://github.com/robotemi/sdk/blob/master/sample/src/main/java/com/robotemi/sdk/sample/MainActivity.java#L1549-L690" target="_blank" rel="noreferrer">Sample</a> for details.</p></li></ul><h4 id="required-permissions-3" tabindex="-1">Required permissions <a class="header-anchor" href="#required-permissions-3" aria-label="Permalink to &quot;Required permissions&quot;">​</a></h4><p>Selected Kiosk</p><h4 id="support-from-3" tabindex="-1">Support from <a class="header-anchor" href="#support-from-3" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.77</p>`,240)]))}const c=s(n,[["render",r]]);export{g as __pageData,c as default};
