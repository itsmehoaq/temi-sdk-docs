import{_ as e,c as a,o as i,ag as s}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"Detection & Interaction","description":"","frontmatter":{},"headers":[],"relativePath":"wiki/detectionAndInteraction.md","filePath":"wiki/detectionAndInteraction.md"}'),n={name:"wiki/detectionAndInteraction.md"};function o(r,t,d,h,l,p){return i(),a("div",null,t[0]||(t[0]=[s(`<h1 id="detection-interaction" tabindex="-1">Detection &amp; Interaction <a class="header-anchor" href="#detection-interaction" aria-label="Permalink to &quot;Detection &amp; Interaction&quot;">​</a></h1><p>User detection and interaction are two state machines which allow us to monitor when temi has detected a person and when a user is interacting with temi.</p><p>To make use of these state machines temi has to have the Detection Mode turned on, see integration instructions below. In Detection Mode temi will:</p><ul><li>Constantly look for users</li><li>Distance 0.8 meter in frame of RGB camera</li><li>If there is more than 1 user - pick the closest one and the most center one</li></ul><p>temi will start the Detection Mode session if Launcher in a state without user interaction and movement, and your skill can listen for the events from that via this feature and according it to do what you want temi to do.</p><p>For more information on the detection and interaction state machines see below the Listeners section.</p><p><strong>Note: There&#39;s a <a href="https://github.com/ROBOTEAM-HOME/temi-welcomingmode-b2b" target="_blank" rel="noreferrer">Welcoming Mode app</a> already developed that would satisfy most B2B needs, and can provide a good reference for anyone who like to develop an app using the Detection Mode abilities.</strong></p><h2 id="api-overview" tabindex="-1">API Overview <a class="header-anchor" href="#api-overview" aria-label="Permalink to &quot;API Overview&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Return</th><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>boolean</td><td><a href="#isDetectionModeOn">isDetectionModeOn()</a></td><td>Check if Detection Mode is on</td></tr><tr><td>void</td><td><a href="#setDetectionModeOn">setDetectionModeOn(boolean on)</a></td><td>Turn on(off) Detection Mode</td></tr><tr><td>void</td><td><a href="#setDetectionModeOnWithDistance">setDetectionModeOn(boolean on, float distance)</a></td><td>Turn on Detection Mode with the maximum dection distance</td></tr><tr><td>boolean</td><td><a href="#isTrackUserOn">isTrackUserOn</a></td><td>Check if Track User is on</td></tr><tr><td>void</td><td><a href="#setTrackUserOn">setTrackUserOn(boolean isOn)</a></td><td>Turn on(off) Track User</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Interface</th><th>Description</th></tr></thead><tbody><tr><td><a href="#onDetectionStateChangedListener">OnDetectionStateChangedListener</a></td><td>Detection Mode state changed listener</td></tr><tr><td><a href="#onUserInteractionChangedListener">OnUserInteractionChangedListener</a></td><td>User interaction state changed listener</td></tr><tr><td><a href="#onDetectionDataChangedListener">OnDetectionDataChangedListener</a></td><td>Detection Mode data changed listener</td></tr></tbody></table><table tabindex="0"><thead><tr><th>Model</th><th>Description</th></tr></thead><tbody><tr><td><a href="#detectionData">DetectionData</a></td><td>Detection data in Detection Mode</td></tr></tbody></table><h2 id="integration" tabindex="-1">Integration <a class="header-anchor" href="#integration" aria-label="Permalink to &quot;Integration&quot;">​</a></h2><p>To configure the skill can use Detection Mode you must take the following steps:</p><ol><li>The skill should be a <a href="https://github.com/robotemi/sdk/wiki/Kiosk-Mode" target="_blank" rel="noreferrer">Kiosk Mode</a> skill first. Please learn how to configure skill into a <a href="https://github.com/robotemi/sdk/wiki/Kiosk-Mode" target="_blank" rel="noreferrer">Kiosk Mode</a> from <a href="https://github.com/robotemi/sdk/wiki/Kiosk-Mode" target="_blank" rel="noreferrer">here</a>.</li><li>Return temi and go to <em>Settings &gt; General Settings &gt; Turn on the Tracking User</em>.</li><li>Return to home page.</li><li>Compile and run your skill.</li></ol><h2 id="update" tabindex="-1">Update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Update&quot;">​</a></h2><ul><li><h3 id="version-126-launcher-version-is-15567" tabindex="-1">Version 126(Launcher version is 15567) <a class="header-anchor" href="#version-126-launcher-version-is-15567" aria-label="Permalink to &quot;Version 126(Launcher version is 15567)&quot;">​</a></h3><p><strong><a href="#setDetectionModeOn">Turning of Detection Mode</a> will be invalid if <a href="#setTrackUserOn">Track User(welcome mode)</a> is turned on.</strong></p></li><li><h3 id="_0-10-77-update-the-relationship-between-detection-mode-and-track-user" tabindex="-1">0.10.77 Update the relationship between Detection Mode and Track User <a class="header-anchor" href="#_0-10-77-update-the-relationship-between-detection-mode-and-track-user" aria-label="Permalink to &quot;0.10.77 Update the relationship between Detection Mode and Track User&quot;">​</a></h3><p><a href="#setDetectionModeOn">Turning on Detection Mode</a> will not affect <a href="#setTrackUserOn">Track User(welcome mode)</a>, <s>but turning off Detection Mode will turning off Track User</s>. Turning on(off) Track User will turning on(off) Detection Mode.</p><table tabindex="0"><thead><tr><th>Operation \\ Effect</th><th>Detection Mode</th><th>Track User</th></tr></thead><tbody><tr><td>Turning on Detection Mode</td><td>ON</td><td>-</td></tr><tr><td>Turning off Detection Mode</td><td>OFF</td><td><s>OFF</s></td></tr><tr><td>Turning on Track User</td><td>ON</td><td>ON</td></tr><tr><td>Turning off Track User</td><td>OFF</td><td>OFF</td></tr></tbody></table></li></ul><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="isdetectionmodeon" tabindex="-1">isDetectionModeOn() <a class="header-anchor" href="#isdetectionmodeon" aria-label="Permalink to &quot;isDetectionModeOn()&quot;">​</a></h3><p>Check if Detection Mode is on. Off is as the default.</p><ul><li><strong>Return</strong><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>boolean</td><td>ture(false) means Detection Mode is on(off)</td></tr></tbody></table></li><li><strong>Prototype</strong><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isDetectionModeOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><strong>Required permissions</strong> None.</li><li><strong>Support from</strong> 0.10.70</li></ul><hr><h3 id="setdetectionmodeon" tabindex="-1">setDetectionModeOn() <a class="header-anchor" href="#setdetectionmodeon" aria-label="Permalink to &quot;setDetectionModeOn()&quot;">​</a></h3><p>Use this method to turn on (off) the Detection Mode. If use this method to turn on the Detection Mode, the maximum detection distance would be the default( <strong>0.8</strong> meters). <strong>This method will not work if in Greet Mode</strong>.</p><ul><li><strong>Parameters</strong><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>on</td><td>boolean</td><td><code>true</code>(<code>false</code>) to turn on(off) the Detection Mode</td></tr></tbody></table></li><li><strong>Prototype</strong><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setDectionModeOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> on);</span></span></code></pre></div></li><li><strong>Required permissions</strong> Selected Kiosk (Before 129 version), Settings</li><li><strong>Support from</strong> 0.10.70</li></ul><hr><h3 id="setdetectionmodeon-1" tabindex="-1">setDetectionModeOn() <a class="header-anchor" href="#setdetectionmodeon-1" aria-label="Permalink to &quot;setDetectionModeOn()&quot;">​</a></h3><p>Use this method to turn on(off) the Detection Mode. If you use this method to turn on the Detection Mode, you can set its maximum detection distance at the same time. <strong>This method will not work if in Greet Mode</strong>.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>on</td><td>boolean</td><td><code>true</code>(<code>false</code>) to turn on(off) the Detection Mode</td></tr><tr><td>distance</td><td>float</td><td>The maximum distance that the Detection Mode can detect (only works when <code>on</code> is <code>true</code>). <strong>0.5 - 2.0</strong> are valid.</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setDectionModeOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> on, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>Selected Kiosk (Before 129 version), Settings</p></li><li><p><strong>Support from</strong></p><p>0.10.70</p></li></ul><hr><h3 id="istrackuseron" tabindex="-1">isTrackUserOn() <a class="header-anchor" href="#istrackuseron" aria-label="Permalink to &quot;isTrackUserOn()&quot;">​</a></h3><p>Check if Track User is on. Off is as the default.</p><ul><li><p><strong>Return</strong></p><table tabindex="0"><thead><tr><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>boolean</td><td>ture(false) means Track User is on(off)</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isTrackUserOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>None.</p></li><li><p><strong>Support from</strong></p><p>0.10.70</p></li></ul><hr><h3 id="settrackuseron" tabindex="-1">setTrackUserOn() <a class="header-anchor" href="#settrackuseron" aria-label="Permalink to &quot;setTrackUserOn()&quot;">​</a></h3><p>Use this method to turn on (off) the Track User. Track User means that after transiting to the state that without user interaction, temi will start constraint following the user that detected by Detection Mode and the green badge shows &quot;Hello&quot; will appear at the top bar. <strong>This method will not work if in Greet Mode</strong>.</p><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>on</td><td>boolean</td><td><code>true</code>(<code>false</code>) to turn on(off) the Track User</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setTrackUserOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> on);</span></span></code></pre></div></li><li><p><strong>Required permissions</strong></p><p>Selected Kiosk (Before 129 version), Settings</p></li><li><p><strong>Support from</strong></p><p>0.10.70</p></li></ul><h2 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h2><h3 id="ondetectionstatechangedlistener" tabindex="-1">OnDetectionStateChangedListener <a class="header-anchor" href="#ondetectionstatechangedlistener" aria-label="Permalink to &quot;OnDetectionStateChangedListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to get the latest state regarding the user detection.</p><h4 id="prototype" tabindex="-1">Prototype <a class="header-anchor" href="#prototype" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnDetectionStateChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="static-constants" tabindex="-1">Static constants <a class="header-anchor" href="#static-constants" aria-label="Permalink to &quot;Static constants&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Constant</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>DETECTED</td><td>int</td><td>2</td><td>When a human body is detected</td></tr><tr><td>LOST</td><td>int</td><td>1</td><td>Target detected lost</td></tr><tr><td>IDLE</td><td>int</td><td>0</td><td>No active detection occurring and 4 seconds have passed since last detection was lost</td></tr></tbody></table><h4 id="abstract-methods" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>state</td><td>int</td><td>Detection Mode state, possible states are <a href="#detected"><code>DETECTED</code></a>, <a href="#lost"><code>LOST</code></a>, <a href="#idle"><code>IDLE</code></a></td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onDetectionStateChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnDetectionStateChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnDetectionStateChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnDetectionStateChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnDetectionStateChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnDetectionStateChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnDetectionStateChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="support-from" tabindex="-1">Support from <a class="header-anchor" href="#support-from" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.53</p><hr><h3 id="onuserinteractionchangedlistener" tabindex="-1">OnUserInteractionChangedListener <a class="header-anchor" href="#onuserinteractionchangedlistener" aria-label="Permalink to &quot;OnUserInteractionChangedListener&quot;">​</a></h3><p>Set your context to implement this listener and add the override method to get the latest state regarding the user interaction. <code>isInteracting</code> will be returned <code>true</code> if the user is interacting otherwise it will be false. The interaction state machine will become active if one of the following condition is met:</p><ul><li>User is detected</li><li>User is interacting with temi by touch or voice, or is in telepresence</li><li>temi is in motion</li></ul><h4 id="prototype-1" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-1" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnUserInteractionChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-1" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-1" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>isInteracting</td><td>boolean</td><td><code>true</code>(<code>false</code>) means that user is(is not) interacting</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onUserInteraction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isInteracting);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-1" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-1" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnUserInteractionChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnUserInteractionChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnUserInteractionChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-1" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-1" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnUserInteractionChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnUserInteractionChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnUserInteractionChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="support-from-1" tabindex="-1">Support from <a class="header-anchor" href="#support-from-1" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.53</p><hr><h3 id="ondetectiondatachangedlistener" tabindex="-1">OnDetectionDataChangedListener <a class="header-anchor" href="#ondetectiondatachangedlistener" aria-label="Permalink to &quot;OnDetectionDataChangedListener&quot;">​</a></h3><p>After the Detection Mode is turned on, data related to Detection Mode can be received in its subclass.</p><h4 id="prototype-2" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-2" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.listeners;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OnDetectionDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="abstract-methods-2" tabindex="-1">Abstract methods <a class="header-anchor" href="#abstract-methods-2" aria-label="Permalink to &quot;Abstract methods&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>detectionData</td><td><a href="#detectionData">DetectionData</a></td><td>Detected data</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onDetectionDataChanged</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DetectionData detectionData);</span></span></code></pre></div></li></ul><h4 id="method-for-adding-listener-2" tabindex="-1">Method for adding listener <a class="header-anchor" href="#method-for-adding-listener-2" aria-label="Permalink to &quot;Method for adding listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnDetectionDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOnDetectionDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnDetectionDataChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="method-for-removing-listener-2" tabindex="-1">Method for removing listener <a class="header-anchor" href="#method-for-removing-listener-2" aria-label="Permalink to &quot;Method for removing listener&quot;">​</a></h4><ul><li><p><strong>Parameters</strong></p><table tabindex="0"><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>listener</td><td>OnDetectionDataChangedListener</td><td>An instance of a class that implements this interface</td></tr></tbody></table></li><li><p><strong>Prototype</strong></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> removeOnDetectionDataChangedListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OnDetectionDataChangedListener listener)</span></span></code></pre></div></li></ul><h4 id="support-from-2" tabindex="-1">Support from <a class="header-anchor" href="#support-from-2" aria-label="Permalink to &quot;Support from&quot;">​</a></h4><p>0.10.70</p><h2 id="models" tabindex="-1">Models <a class="header-anchor" href="#models" aria-label="Permalink to &quot;Models&quot;">​</a></h2><p>Below are the list of models used in the utils methods.</p><h3 id="detectiondata" tabindex="-1">DetectionData <a class="header-anchor" href="#detectiondata" aria-label="Permalink to &quot;DetectionData&quot;">​</a></h3><p>Used for holding the data related Detection Mode.</p><h4 id="prototype-3" tabindex="-1">Prototype <a class="header-anchor" href="#prototype-3" aria-label="Permalink to &quot;Prototype&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.robotemi.sdk.model;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DetectionData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><h4 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Attribute</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>angle</td><td>double</td><td>-</td></tr><tr><td>distance</td><td>double</td><td>The distance from temi to the detected user</td></tr><tr><td>isDetected</td><td>boolean</td><td><code>true</code>(<code>false</code>) means temi did(did not) detect someone</td></tr></tbody></table>`,86)]))}const k=e(n,[["render",o]]);export{g as __pageData,k as default};
